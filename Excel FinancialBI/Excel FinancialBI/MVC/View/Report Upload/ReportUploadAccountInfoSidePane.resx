<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIAAoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3PAD/bjcA/243AP9uNwD/bjcA/243AP9yOAD/ZzQA/2s1
        ABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG43AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/2k0
        AP9kMwDuYzgAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbjcA/2YzAP9mMwD/ZjMA/2Yz
        AP9mMwD/aTQA/2QzAO5jOAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuNwD/ZjMA/2Yz
        AP9mMwD/ZjMA/2YzAP9pNAD/ZDMA7mM4ABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG43
        AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/2k0AP9kMwDuYzgAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAbjcA/2YzAP9mMwD/ZjMA/2YzAP9mMwD/aTQA/2QzAO5jOAASAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABxOAD/aTQA/2k0AP9pNAD/aTQA/2k0AP9sNQD/ZjMA9GM4ABIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGw1AO1mMQDtZjEA7WYxAO1mMQDtZjEA7WkyAO1lMgDdaTwAEQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHc8AP9uNwD/bjcA/243
        AP9uNwD/bjcA/3I4AP9nNAD/AAAAAAAAAAB3PAD/bjcA/243AP9uNwD/bjcA/243AP9uNwD/dzwA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbjcA/2Yz
        AP9mMwD/ZjMA/2YzAP9mMwD/aTQA/2QzAO4AAAAAAAAAAG43AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/2Yz
        AP9uNwD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABuNwD/ZjMA/2YzAP9mMwD/ZjMA/2YzAP9pNAD/ZDMA7gAAAAAAAAAAbjcA/2YzAP9mMwD/ZjMA/2Yz
        AP9mMwD/ZjMA/243AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAG43AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/2k0AP9kMwDuAAAAAAAAAABuNwD/ZjMA/2Yz
        AP9mMwD/ZjMA/2YzAP9mMwD/bjcA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAbjcA/2YzAP9mMwD/ZjMA/2YzAP9mMwD/aTQA/2QzAO4AAAAAAAAAAG43
        AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/2YzAP9uNwD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuNwD/ZjMA/2YzAP9mMwD/ZjMA/2YzAP9pNAD/ZDMA7gAA
        AAAAAAAAbjcA/2YzAP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/243AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHE4AP9pNAD/aTQA/2k0AP9pNAD/aTQA/2w1
        AP9mMwD0AAAAAAAAAABxOAD/aTQA/2k0AP9pNAD/aTQA/2k0AP9pNAD/cTgA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbDUA7WYxAO1mMQDtZjEA7WYx
        AO1mMQDtaTIA7WUyAN0AAAAAAAAAAGw1AO1mMQDtZjEA7WYxAO1mMQDtZjEA7WYxAO1sNQDtAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAdzwA/243AP9uNwD/bjcA/243AP9uNwD/cjgA/2c0AP8AAAAAAAAAAHc8AP9uNwD/bjcA/243
        AP9uNwD/bjcA/243AP93PAD/AAAAAAAAAABnMwD/cjgA/243AP9uNwD/bjcA/243AP9uNwD/dzwA/wAA
        AAAAAAAAAAAAAAAAAABuNwD/ZjMA/2YzAP9mMwD/ZjMA/2YzAP9pNAD/ZDMA7gAAAAAAAAAAbjcA/2Yz
        AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/243AP8AAAAAAAAAAGYxAO1pNAD/ZjMA/2YzAP9mMwD/ZjMA/2Yz
        AP9uNwD/AAAAAAAAAAAAAAAAAAAAAG43AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/2k0AP9kMwDuAAAAAAAA
        AABuNwD/ZjMA/2YzAP9mMwD/ZjMA/2YzAP9mMwD/bjcA/wAAAAAAAAAAZjEA7Wk0AP9mMwD/ZjMA/2Yz
        AP9mMwD/ZjMA/243AP8AAAAAAAAAAAAAAAAAAAAAbjcA/2YzAP9mMwD/ZjMA/2YzAP9mMwD/aTQA/2Qz
        AO4AAAAAAAAAAG43AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/2YzAP9uNwD/AAAAAAAAAABmMQDtaTQA/2Yz
        AP9mMwD/ZjMA/2YzAP9mMwD/bjcA/wAAAAAAAAAAAAAAAAAAAABuNwD/ZjMA/2YzAP9mMwD/ZjMA/2Yz
        AP9pNAD/ZDMA7gAAAAAAAAAAbjcA/2YzAP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/243AP8AAAAAAAAAAGYx
        AO1pNAD/ZjMA/2YzAP9mMwD/ZjMA/2YzAP9uNwD/AAAAAAAAAAAAAAAAAAAAAG43AP9mMwD/ZjMA/2Yz
        AP9mMwD/ZjMA/2k0AP9kMwDuAAAAAAAAAABuNwD/ZjMA/2YzAP9mMwD/ZjMA/2YzAP9mMwD/bjcA/wAA
        AAAAAAAAZjEA7Wk0AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/243AP8AAAAAAAAAAAAAAAAAAAAAbjcA/2Yz
        AP9mMwD/ZjMA/2YzAP9mMwD/aTQA/2QzAO4AAAAAAAAAAG43AP9mMwD/ZjMA/2YzAP9mMwD/ZjMA/2Yz
        AP9uNwD/AAAAAAAAAABmMQDtaTQA/2YzAP9mMwD/ZjMA/2YzAP9mMwD/bjcA/wAAAAAAAAAAAAAAAAAA
        AAB3PAD/bjcA/243AP9uNwD/bjcA/243AP9yOAD/ZzQA/wAAAAAAAAAAdzwA/243AP9uNwD/bjcA/243
        AP9uNwD/bjcA/3c8AP8AAAAAAAAAAGczAP9yOAD/bjcA/243AP9uNwD/bjcA/243AP93PAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>